#
#  Static Audio/Video libs (ffmpeg version) build
#  Copyright (C) 2014 Jaroslav Kysela
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

DIR :=  $(dir $(lastword $(MAKEFILE_LIST)))
include $(DIR)/.config.mk

ifneq (,$(filter i386 i486 i586 i686 pentium,$(ARCH)))
FFMPEG_HOST   := $(ARCH)-linux-gnu
FFMPEG_TARGET := x86-linux-gcc
endif

unexport CFLAGS
unexport LDFLAGS


# ##############################################################################
# Upstream Packages
# ##############################################################################

EXTLIBS        =
COMPONENTS     = avutil avcodec avformat swscale avresample swresample avfilter
PROTOCOLS      = file http https hls mmsh mmst rtmp rtmpe rtmps rtmpt rtmpte rtmpts \
                 ffrtmpcrypt ffrtmphttp rtp srtp tcp udp udplite unix
DECODERS       = mpeg2video mp2 aac vorbis ac3 eac3 aac_latm opus h264 hevc theora flac
ENCODERS       = mpeg2video mp2 aac vorbis flac
MUXERS         = mpegts matroska mp4
DEMUXERS       = mpegts matroska hls flv live_flv
BSFS           = h264_mp4toannexb hevc_mp4toannexb
FILTERS        = yadif format hwupload hwdownload scale null aresample anull
HWACCELS       =

YASM           = yasm-1.3.0
YASM_TB        = $(YASM).tar.gz
YASM_URL       = http://www.tortall.net/projects/yasm/releases/$(YASM_TB)
YASM_SHA1      = b7574e9f0826bedef975d64d3825f75fbaeef55e

LIBX264        = x264-snapshot-20170515-2245
LIBX264_TB     = $(LIBX264).tar.bz2
LIBX264_URL    = http://ftp.videolan.org/x264/snapshots/$(LIBX264_TB)
LIBX264_SHA1   = 8079e472b3af5d54a20a8907d364b615a67fa6f2

LIBX265        = x265_2.4
LIBX265_TB     = $(LIBX265).tar.gz
LIBX265_URL    = http://ftp.videolan.org/videolan/x265/$(LIBX265_TB)
LIBX265_SHA1   = f8bfb348defa86fbfdce4dcc1d0c48c855e0e987
ifeq ($(CONFIG_PIE),yes)
LIBX265_DIFFS  = libx265.pie.diff
else
LIBX265_DIFFS  = libx265.pic.diff
endif

LIBVPX         = libvpx-1.6.1
LIBVPX_TB      = $(LIBVPX).tar.bz2
LIBVPX_URL     = http://storage.googleapis.com/downloads.webmproject.org/releases/webm/$(LIBVPX_TB)
LIBVPX_SHA1    = a8bd0596915489d3bd8eded98d408ab8705e2f5d

LIBOGG         = libogg-1.3.2
LIBOGG_TB      = $(LIBOGG).tar.gz
LIBOGG_URL     = http://downloads.xiph.org/releases/ogg/$(LIBOGG_TB)
LIBOGG_SHA1    = df7f3977bbeda67306bc2a427257dd7375319d7d

LIBTHEORA      = libtheora-1.1.1
LIBTHEORA_TB   = $(LIBTHEORA).tar.gz
LIBTHEORA_URL  = http://downloads.xiph.org/releases/theora/$(LIBTHEORA_TB)
LIBTHEORA_SHA1 = 0b91be522746a29351a5ee592fd8160940059303

LIBVORBIS      = libvorbis-1.3.5
LIBVORBIS_TB   = $(LIBVORBIS).tar.gz
LIBVORBIS_URL  = http://downloads.xiph.org/releases/vorbis/$(LIBVORBIS_TB)
LIBVORBIS_SHA1 = 10c7fee173178d72855aa7593dfe49d9b3d6c804

LIBFDKAAC      = fdk-aac-0.1.4
LIBFDKAAC_TB   = $(LIBFDKAAC).tar.gz
LIBFDKAAC_URL  = https://freefr.dl.sourceforge.net/project/opencore-amr/fdk-aac/$(LIBFDKAAC_TB)
LIBFDKAAC_SHA1 = 9215d19bdd911954fd5bc879c707ab571716ba0d

LIBOPUS        = opus-1.2.1
LIBOPUS_TB     = $(LIBOPUS).tar.gz
LIBOPUS_URL    = https://archive.mozilla.org/pub/opus/$(LIBOPUS_TB)
LIBOPUS_SHA1   = 35d108ca9d6a8d05e52d06c5421a5f95b39fdac9

FFMPEG         = ffmpeg-3.4.1
FFMPEG_TB      = $(FFMPEG).tar.bz2
FFMPEG_URL     = http://ffmpeg.org/releases/$(FFMPEG_TB)
FFMPEG_SHA1    = 4347db0b5a5cfc3847395b29aefb51d09cfdd697

# ##############################################################################
# Library Config
# ##############################################################################

LIB_NAME  := ffmpeg
LIB_ROOT  := $(BUILDDIR)/$(LIB_NAME)
EBUILDIR  := $(LIB_ROOT)/build
EPREFIX0  := ffmpeg
EPREFIX   := $(EBUILDIR)/$(EPREFIX0)
LIB_FILES := \
		$(LIB_ROOT)/$(YASM)/.tvh_download \
		$(LIB_ROOT)/$(YASM)/.tvh_build \
		$(LIB_ROOT)/$(LIBX264)/.tvh_download \
		$(LIB_ROOT)/$(LIBX264)/.tvh_build \
		$(LIB_ROOT)/$(LIBX265)/.tvh_download \
		$(LIB_ROOT)/$(LIBX265)/.tvh_build \
		$(LIB_ROOT)/$(LIBVPX)/.tvh_download \
		$(LIB_ROOT)/$(LIBVPX)/.tvh_build \
		$(LIB_ROOT)/$(LIBTHEORA)/.tvh_download \
		$(LIB_ROOT)/$(LIBTHEORA)/.tvh_build \
		$(LIB_ROOT)/$(LIBOGG)/.tvh_download \
		$(LIB_ROOT)/$(LIBOGG)/.tvh_build \
		$(LIB_ROOT)/$(LIBVORBIS)/.tvh_download \
		$(LIB_ROOT)/$(LIBVORBIS)/.tvh_build \
		$(LIB_ROOT)/$(LIBFDKAAC)/.tvh_download \
		$(LIB_ROOT)/$(LIBFDKAAC)/.tvh_build \
		$(LIB_ROOT)/$(LIBOPUS)/.tvh_download \
		$(LIB_ROOT)/$(LIBOPUS)/.tvh_build \
		$(LIB_ROOT)/$(FFMPEG)/.tvh_download \
		$(LIB_ROOT)/$(FFMPEG)/.tvh_build \
		$(EPREFIX)

include $(DIR)/Makefile.static

.PHONY: build $(PHONY)
build: $(LIB_ROOT)/$(FFMPEG)/.tvh_build


# ##############################################################################
# Build Rules
# ##############################################################################

export PATH := $(LIB_ROOT)/build/ffmpeg/bin:$(PATH)

ifeq ($(CONFIG_PIE),yes)
CFLAGS_PI = -fPIE
else
CFLAGS_PI = -fPIC
endif

ECFLAGS   := -I$(EPREFIX)/include $(CFLAGS_PI)
ELIBS     := -L$(EPREFIX)/lib -ldl

CONFIGURE := FFMPEG_PREFIX=$(EPREFIX) \
             PKG_CONFIG=$(ROOTDIR)/support/pkg-config.ffmpeg \
             ./configure --prefix=/ffmpeg --enable-static --disable-shared
CONFIGURE_PI := CC="$(COMPILER) $(CFLAGS_PI)" $(CONFIGURE)

# ##############################################################################
# YASM
#

$(LIB_ROOT)/$(YASM)/.tvh_download:
	$(call DOWNLOAD,$(YASM_URL),$(LIB_ROOT)/$(YASM_TB),$(YASM_SHA1))
	$(call UNTAR,$(YASM_TB),z)
	@touch $@

$(LIB_ROOT)/$(YASM)/.tvh_build: \
		$(LIB_ROOT)/$(YASM)/.tvh_download
	cd $(LIB_ROOT)/$(YASM) && $(CONFIGURE_PI) \
		--libdir=/$(EPREFIX0)/lib
	DESTDIR=$(EBUILDIR) \
		$(MAKE) -C $(LIB_ROOT)/$(YASM) install
	@touch $@


# ##############################################################################
# LIBX264
#

ifeq (yes,$(CONFIG_LIBX264))

EXTLIBS  += libx264
ENCODERS += libx264
FFMPEG_DIFFS += ffmpeg.libx264.diff

endif


ifeq (yes,$(CONFIG_LIBX264_STATIC))

ifneq (,$(DEB_BUILD_GNU_TYPE))
LIBX264_HOST := --host=$(DEB_BUILD_GNU_TYPE)
endif

ifeq (,$(LIBX264_HOST))
ifneq (,$(FFMPEG_HOST))
LIBX264_HOST := --host=$(FFMPEG_HOST)
endif
endif

$(LIB_ROOT)/$(LIBX264)/.tvh_download:
	$(call DOWNLOAD,$(LIBX264_URL),$(LIB_ROOT)/$(LIBX264_TB),$(LIBX264_SHA1))
	$(call UNTAR,$(LIBX264_TB),j)
	@touch $@

$(LIB_ROOT)/$(LIBX264)/.tvh_build: \
		$(LIB_ROOT)/$(YASM)/.tvh_build \
		$(LIB_ROOT)/$(LIBX264)/.tvh_download
	cd $(LIB_ROOT)/$(LIBX264) && $(CONFIGURE) \
		--extra-asflags="-DPIC" \
		--extra-cflags="$(CFLAGS_PI)" \
		--disable-cli \
		--disable-swscale \
		--disable-lavf \
		--disable-avs \
		--disable-ffms \
		--disable-gpac \
		--disable-lsmash \
		$(LIBX264_HOST)
	DESTDIR=$(EBUILDIR) \
		$(MAKE) -C $(LIB_ROOT)/$(LIBX264) install
	@touch $@

else

$(LIB_ROOT)/$(LIBX264)/.tvh_download:
	@mkdir -p $(LIB_ROOT)/$(LIBX264)
	@touch $@

$(LIB_ROOT)/$(LIBX264)/.tvh_build: \
	$(LIB_ROOT)/$(LIBX264)/.tvh_download
	@touch $@

endif


# ##############################################################################
# LIBX265
#

ifeq (yes,$(CONFIG_LIBX265))

EXTLIBS  += libx265
ENCODERS += libx265
FFMPEG_DIFFS += ffmpeg.libx265.diff

endif


ifeq (yes,$(CONFIG_LIBX265_STATIC))

$(LIB_ROOT)/$(LIBX265)/.tvh_download:
	$(call DOWNLOAD,$(LIBX265_URL),$(LIB_ROOT)/$(LIBX265_TB),$(LIBX265_SHA1))
	$(call UNTAR,$(LIBX265_TB),z)
	$(call PATCH,$(LIBX265),$(LIBX265_DIFFS))
	@touch $@

$(LIB_ROOT)/$(LIBX265)/.tvh_build: \
		$(LIB_ROOT)/$(YASM)/.tvh_build \
		$(LIB_ROOT)/$(LIBX265)/.tvh_download
	cd $(LIB_ROOT)/$(LIBX265)/build/linux && cmake -G "Unix Makefiles" \
		-DCMAKE_INSTALL_PREFIX="/ffmpeg" \
		-DENABLE_SHARED:BOOL=OFF \
		../../source
	DESTDIR=$(EBUILDIR) \
		$(MAKE) -C $(LIB_ROOT)/$(LIBX265)/build/linux install
	@touch $@

else

$(LIB_ROOT)/$(LIBX265)/.tvh_download:
	@mkdir -p $(LIB_ROOT)/$(LIBX265)
	@touch $@

$(LIB_ROOT)/$(LIBX265)/.tvh_build: \
	$(LIB_ROOT)/$(LIBX265)/.tvh_download
	@touch $@

endif


# ##############################################################################
# LIBVPX
#

ifeq (yes,$(CONFIG_LIBVPX))

EXTLIBS  += libvpx
ENCODERS += libvpx_vp8 libvpx_vp9

endif


ifeq (yes,$(CONFIG_LIBVPX_STATIC))

ifneq (,$(FFMPEG_TARGET))
LIBVPX_TARGET := --target=$(FFMPEG_TARGET)
endif

$(LIB_ROOT)/$(LIBVPX)/.tvh_download:
	$(call DOWNLOAD,$(LIBVPX_URL),$(LIB_ROOT)/$(LIBVPX_TB),$(LIBVPX_SHA1))
	$(call UNTAR,$(LIBVPX_TB),j)
	@touch $@

$(LIB_ROOT)/$(LIBVPX)/.tvh_build: \
		$(LIB_ROOT)/$(YASM)/.tvh_build \
		$(LIB_ROOT)/$(LIBVPX)/.tvh_download
	cd $(LIB_ROOT)/$(LIBVPX) && \
		ASFLAGS="-DENABLE_PIC=1 -DPIC=1" $(CONFIGURE) \
		--extra-cflags="$(CFLAGS_PI)" \
		--disable-examples \
		--disable-docs \
		--disable-unit-tests \
		$(LIBVPX_TARGET)
	DIST_DIR=$(EPREFIX) \
		$(MAKE) -C $(LIB_ROOT)/$(LIBVPX) install
	@touch $@

else

$(LIB_ROOT)/$(LIBVPX)/.tvh_download:
	@mkdir -p $(LIB_ROOT)/$(LIBVPX)
	@touch $@

$(LIB_ROOT)/$(LIBVPX)/.tvh_build: \
	$(LIB_ROOT)/$(LIBVPX)/.tvh_download
	@touch $@

endif


# ##############################################################################
# LIBOGG
#

ifeq (yes,$(CONFIG_LIBOGG_STATIC))

$(LIB_ROOT)/$(LIBOGG)/.tvh_download:
	$(call DOWNLOAD,$(LIBOGG_URL),$(LIB_ROOT)/$(LIBOGG_TB),$(LIBOGG_SHA1))
	$(call UNTAR,$(LIBOGG_TB),z)
	@touch $@

$(LIB_ROOT)/$(LIBOGG)/.tvh_build: \
		$(LIB_ROOT)/$(YASM)/.tvh_build \
		$(LIB_ROOT)/$(LIBOGG)/.tvh_download
	cd $(LIB_ROOT)/$(LIBOGG) && \
		$(CONFIGURE_PI) \
		--libdir=/$(EPREFIX0)/lib
	DESTDIR=$(EBUILDIR) \
		$(MAKE) -C $(LIB_ROOT)/$(LIBOGG) install
	@touch $@

endif


# ##############################################################################
# LIBTHEORA
#

ifeq (yes,$(CONFIG_LIBTHEORA))

EXTLIBS  += libtheora
ENCODERS += libtheora

endif


ifeq (yes,$(CONFIG_LIBTHEORA_STATIC))

ifeq (,$(LIBTHEORA_HOST))
ifneq (,$(FFMPEG_HOST))
LIBTHEORA_HOST := --host=$(FFMPEG_HOST)
endif
endif

$(LIB_ROOT)/$(LIBTHEORA)/.tvh_download:
	$(call DOWNLOAD,$(LIBTHEORA_URL),$(LIB_ROOT)/$(LIBTHEORA_TB),$(LIBTHEORA_SHA1))
	$(call UNTAR,$(LIBTHEORA_TB),z)
	@touch $@

$(LIB_ROOT)/$(LIBTHEORA)/.tvh_build: \
		$(LIB_ROOT)/$(YASM)/.tvh_build \
		$(LIB_ROOT)/$(LIBOGG)/.tvh_build \
		$(LIB_ROOT)/$(LIBTHEORA)/.tvh_download
	cd $(LIB_ROOT)/$(LIBTHEORA) && \
		$(CONFIGURE_PI) \
		--libdir=/$(EPREFIX0)/lib \
		--with-ogg=$(EPREFIX) \
		--disable-examples \
		--disable-spec \
		$(LIBTHEORA_HOST)
	DESTDIR=$(EBUILDIR) \
		$(MAKE) -C $(LIB_ROOT)/$(LIBTHEORA) install
	@touch $@

else

$(LIB_ROOT)/$(LIBTHEORA)/.tvh_download:
	@mkdir -p $(LIB_ROOT)/$(LIBTHEORA)
	@touch $@

$(LIB_ROOT)/$(LIBTHEORA)/.tvh_build: \
	$(LIB_ROOT)/$(LIBTHEORA)/.tvh_download
	@touch $@

endif


# ##############################################################################
# LIBVORBIS
#

ifeq (yes,$(CONFIG_LIBVORBIS))

EXTLIBS  += libvorbis
DECODERS += libvorbis
ENCODERS += libvorbis

endif


ifeq (yes,$(CONFIG_LIBVORBIS_STATIC))

$(LIB_ROOT)/$(LIBVORBIS)/.tvh_download:
	$(call DOWNLOAD,$(LIBVORBIS_URL),$(LIB_ROOT)/$(LIBVORBIS_TB),$(LIBVORBIS_SHA1))
	$(call UNTAR,$(LIBVORBIS_TB),z)
	@touch $@

$(LIB_ROOT)/$(LIBVORBIS)/.tvh_build: \
		$(LIB_ROOT)/$(YASM)/.tvh_build \
		$(LIB_ROOT)/$(LIBOGG)/.tvh_build \
		$(LIB_ROOT)/$(LIBVORBIS)/.tvh_download
	cd $(LIB_ROOT)/$(LIBVORBIS) && \
		$(CONFIGURE_PI) \
		--libdir=/$(EPREFIX0)/lib \
		--with-ogg=$(EPREFIX)
	DESTDIR=$(EBUILDIR) \
		$(MAKE) -C $(LIB_ROOT)/$(LIBVORBIS) install
	@touch $@

else

$(LIB_ROOT)/$(LIBVORBIS)/.tvh_download:
	@mkdir -p $(LIB_ROOT)/$(LIBVORBIS)
	@touch $@

$(LIB_ROOT)/$(LIBVORBIS)/.tvh_build: \
	$(LIB_ROOT)/$(LIBVORBIS)/.tvh_download
	@touch $@

endif


# ##############################################################################
# LIBFDKAAC
#

ifeq (yes,$(CONFIG_LIBFDKAAC))

EXTLIBS  += libfdk-aac
ENCODERS += libfdk_aac

endif


ifeq (yes,$(CONFIG_LIBFDKAAC_STATIC))

$(LIB_ROOT)/$(LIBFDKAAC)/.tvh_download:
	$(call DOWNLOAD,$(LIBFDKAAC_URL),$(LIB_ROOT)/$(LIBFDKAAC_TB),$(LIBFDKAAC_SHA1))
	$(call UNTAR,$(LIBFDKAAC_TB),z)
	@touch $@

$(LIB_ROOT)/$(LIBFDKAAC)/.tvh_build: \
		$(LIB_ROOT)/$(LIBFDKAAC)/.tvh_download
	cd $(LIB_ROOT)/$(LIBFDKAAC) && CXXFLAGS="-std=c++98" $(CONFIGURE_PI) \
		--libdir=/$(EPREFIX0)/lib
	DESTDIR=$(EBUILDIR) \
		$(MAKE) -C $(LIB_ROOT)/$(LIBFDKAAC) install
	@touch $@

else

$(LIB_ROOT)/$(LIBFDKAAC)/.tvh_download:
	@mkdir -p $(LIB_ROOT)/$(LIBFDKAAC)
	@touch $@

$(LIB_ROOT)/$(LIBFDKAAC)/.tvh_build: \
	$(LIB_ROOT)/$(LIBFDKAAC)/.tvh_download
	@touch $@

endif


# ##############################################################################
# LIBOPUS
#

ifeq (yes,$(CONFIG_LIBOPUS))

EXTLIBS  += libopus
ENCODERS += libopus

endif


ifeq (yes,$(CONFIG_LIBOPUS_STATIC))

$(LIB_ROOT)/$(LIBOPUS)/.tvh_download:
	$(call DOWNLOAD,$(LIBOPUS_URL),$(LIB_ROOT)/$(LIBOPUS_TB),$(LIBOPUS_SHA1))
	$(call UNTAR,$(LIBOPUS_TB),z)
	@touch $@

$(LIB_ROOT)/$(LIBOPUS)/.tvh_build: \
		$(LIB_ROOT)/$(YASM)/.tvh_build \
		$(LIB_ROOT)/$(LIBOPUS)/.tvh_download
	cd $(LIB_ROOT)/$(LIBOPUS) && $(CONFIGURE_PI) \
		--disable-doc \
		--disable-extra-programs
	DESTDIR=$(EBUILDIR) \
		$(MAKE) -C $(LIB_ROOT)/$(LIBOPUS) install
	@touch $@

else

$(LIB_ROOT)/$(LIBOPUS)/.tvh_download:
	@mkdir -p $(LIB_ROOT)/$(LIBOPUS)
	@touch $@

$(LIB_ROOT)/$(LIBOPUS)/.tvh_build: \
	$(LIB_ROOT)/$(LIBOPUS)/.tvh_download
	@touch $@

endif


# ##############################################################################
# NVENC
#

ifeq (yes,$(CONFIG_NVENC))

EXTLIBS  += nvenc
ENCODERS += h264_nvenc hevc_nvenc

endif


# ##############################################################################
# VAAPI
#

ifeq (yes,$(CONFIG_VAAPI))

EXTLIBS  += vaapi
ENCODERS += h264_vaapi hevc_vaapi vp8_vaapi vp9_vaapi
HWACCELS += mpeg2_vaapi h264_vaapi hevc_vaapi vp9_vaapi
FILTERS  += deinterlace_vaapi scale_vaapi
FFMPEG_DIFFS += ffmpeg.vaapi_encode.diff

endif


# ##############################################################################
# MMAL
#

ifeq (yes,$(CONFIG_MMAL))

EXTLIBS  += mmal
HWACCELS += h264_mmal mpeg2_mmal
DECODERS += h264_mmal

endif


# ##############################################################################
# OMX
#

ifeq (yes,$(CONFIG_OMX))

EXTLIBS  += omx
ENCODERS += h264_omx

endif

ifeq (yes,$(CONFIG_OMX_RPI))

EXTLIBS  += omx_rpi

endif


# ##############################################################################
# Misc.
#

ifneq (,$(filter yes,$(CONFIG_LIBVORBIS) $(CONFIG_LIBTHEORA)))

MUXERS += ogg

endif


ifneq (,$(filter yes,$(CONFIG_NVENC) $(CONFIG_LIBFDKAAC)))

EXTLIBS += nonfree

endif


# ##############################################################################
# FFMPEG
#

$(LIB_ROOT)/$(FFMPEG)/.tvh_download:
	@mkdir -p $(EBUILDIR)
	$(call DOWNLOAD,$(FFMPEG_URL),$(LIB_ROOT)/$(FFMPEG_TB),$(FFMPEG_SHA1))
	$(call UNTAR,$(FFMPEG_TB),j)
	$(call PATCH,$(FFMPEG),$(FFMPEG_DIFFS))
	@touch $@

$(LIB_ROOT)/$(FFMPEG)/.tvh_build: \
		$(LIB_ROOT)/$(YASM)/.tvh_build \
		$(LIB_ROOT)/$(LIBX264)/.tvh_build \
		$(LIB_ROOT)/$(LIBX265)/.tvh_build \
		$(LIB_ROOT)/$(LIBVPX)/.tvh_build \
		$(LIB_ROOT)/$(LIBTHEORA)/.tvh_build \
		$(LIB_ROOT)/$(LIBVORBIS)/.tvh_build \
		$(LIB_ROOT)/$(LIBFDKAAC)/.tvh_build \
		$(LIB_ROOT)/$(LIBOPUS)/.tvh_build \
		$(LIB_ROOT)/$(FFMPEG)/.tvh_download
	cd $(LIB_ROOT)/$(FFMPEG) && $(CONFIGURE) \
		--disable-all \
		--enable-gpl \
		--enable-nonfree \
		--extra-cflags="$(ECFLAGS)" \
		--extra-libs="$(ELIBS)" \
		--pkg-config="$(ROOTDIR)/support/pkg-config.ffmpeg" \
		--enable-openssl --enable-protocol=tls_openssl \
		$(foreach component,$(COMPONENTS),--enable-$(component)) \
		$(foreach extlib,$(EXTLIBS),--enable-$(extlib)) \
		$(foreach protocol,$(PROTOCOLS),--enable-protocol=$(protocol)) \
		$(foreach decoder,$(DECODERS),--enable-decoder=$(decoder)) \
		$(foreach encoder,$(ENCODERS),--enable-encoder=$(encoder)) \
		$(foreach demuxer,$(DEMUXERS),--enable-demuxer=$(demuxer)) \
		$(foreach muxer,$(MUXERS),--enable-muxer=$(muxer)) \
		$(foreach bsf,$(BSFS),--enable-bsf=$(bsf)) \
		$(foreach filter,$(FILTERS),--enable-filter=$(filter)) \
		$(foreach hwaccel,$(HWACCELS),--enable-hwaccel=$(hwaccel))
	DESTDIR=$(EBUILDIR) \
		$(MAKE) -C $(LIB_ROOT)/$(FFMPEG) install
	@touch $@
