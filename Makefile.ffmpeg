#
#  Static Audio/Video libs (ffmpeg version) build
#  Copyright (C) 2014 Jaroslav Kysela
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

DIR :=  $(dir $(lastword $(MAKEFILE_LIST)))
include $(DIR)/.config.mk

unexport CFLAGS
unexport LDFLAGS

# ###########################################################################
# Upstream Packages
# ###########################################################################

FFMPEG          = ffmpeg-2.8.2
FFMPEG_TB       = $(FFMPEG).tar.bz2
FFMPEG_URL      = http://ffmpeg.org/releases/$(FFMPEG_TB)
FFMPEG_SHA1     = 1952aeb9ec3f569514d8db4f30c195b765392639
FFMPEG_DIFFS    = libavcodec.libvpxenc.diff

EXTLIBS         = libx264 libvorbis libvpx
COMPONENTS      = avutil avformat avcodec swresample swscale avfilter avresample
PROTOCOLS       = file
DECODERS        = mpeg2video mp2 ac3 eac3 h264 h264_vdpau hevc aac aac_latm vorbis libvorbis
ENCODERS        = mpeg2video mp2 libx264 libvpx_vp8 libvpx_vp9 aac libaacplus vorbis libvorbis
MUXERS          = mpegts mpeg2dvd matroska webm mp4
BSFS            = h264_mp4toannexb hevc_mp4toannexb
FILTERS         = yadif scale

LIBOGG          = libogg-1.3.2
LIBOGG_TB       = $(LIBOGG).tar.gz
LIBOGG_URL      = http://downloads.xiph.org/releases/ogg/$(LIBOGG_TB)
LIBOGG_SHA1     = df7f3977bbeda67306bc2a427257dd7375319d7d

LIBVORBIS       = libvorbis-1.3.5
LIBVORBIS_TB    = $(LIBVORBIS).tar.gz
LIBVORBIS_URL   = http://downloads.xiph.org/releases/vorbis/$(LIBVORBIS_TB)
LIBVORBIS_SHA1  = 10c7fee173178d72855aa7593dfe49d9b3d6c804

LIBX264         = x264-snapshot-20151120-2245
LIBX264_TB      = $(LIBX264).tar.bz2
LIBX264_URL     = http://ftp.via.ecp.fr/pub/videolan/x264/snapshots/$(LIBX264_TB)
LIBX264_SHA1    = 6ca54b8e257ef52f55c752e94e77dbc93fe32fe4

LIBX265         = x265_1.8
LIBX265_TB      = $(LIBX265).tar.gz
LIBX265_URL     = http://ftp.videolan.org/pub/videolan/x265/$(LIBX265_TB)
LIBX265_SHA1    = 10092d220cd361868672641b8ce7b575cb42bb82

LIBVPX          = libvpx-1.5.0
LIBVPX_TB       = $(LIBVPX).tar.bz2
LIBVPX_URL      = http://storage.googleapis.com/downloads.webmproject.org/releases/webm/$(LIBVPX_TB)
LIBVPX_SHA1     = 0baf76627eb08450eaf307347d1721f56a880c64

YASM            = yasm-1.3.0
YASM_TB         = $(YASM).tar.gz
YASM_URL        = http://www.tortall.net/projects/yasm/releases/$(YASM_TB)
YASM_SHA1       = b7574e9f0826bedef975d64d3825f75fbaeef55e

LIBMFX_HASH     = 8220f463a97b098d9e37bbfa2110b117700d1205
LIBMFX          = mfx_dispatch-$(LIBMFX_HASH)
LIBMFX_TB       = $(LIBMFX_HASH).tar.gz
LIBMFX_URL      = https://github.com/lu-zero/mfx_dispatch/archive/$(LIBMFX_TB)
LIBMFX_SHA1     = e7905a4e18f8d3933f23ed5cf5a96a40a31c76a8

# ###########################################################################
# Library Config
# ###########################################################################

LIB_NAME  := ffmpeg
LIB_ROOT  := $(BUILDDIR)/$(LIB_NAME)
LIB_FILES :=\
	$(LIB_ROOT)/$(FFMPEG)/.tvh_download \
	$(LIB_ROOT)/$(FFMPEG)/.tvh_build \
	$(LIB_ROOT)/$(LIBOGG)/.tvh_download \
	$(LIB_ROOT)/$(LIBOGG)/.tvh_build \
	$(LIB_ROOT)/$(LIBVORBIS)/.tvh_download \
	$(LIB_ROOT)/$(LIBVORBIS)/.tvh_build \
	$(LIB_ROOT)/$(LIBX264)/.tvh_download \
	$(LIB_ROOT)/$(LIBX264)/.tvh_build \
	$(LIB_ROOT)/$(LIBX265)/.tvh_download \
	$(LIB_ROOT)/$(LIBX265)/.tvh_build \
	$(LIB_ROOT)/$(LIBVPX)/.tvh_download \
	$(LIB_ROOT)/$(LIBVPX)/.tvh_build \
	$(LIB_ROOT)/$(YASM)/.tvh_download \
	$(LIB_ROOT)/$(YASM)/.tvh_build \
	$(LIB_ROOT)/$(LIBMFX)/.tvh_download \
	$(LIB_ROOT)/$(LIBMFX)/.tvh_build \
	$(LIB_ROOT)/build/ffmpeg/lib/*.a \
	$(LIB_ROOT)/build/ffmpeg/include/*

include $(DIR)/Makefile.static

.PHONY: build $(PHONY)
build: $(LIB_ROOT)/$(FFMPEG)/.tvh_build

# ###########################################################################
# Build Rules
# ###########################################################################

export PATH := $(LIB_ROOT)/build/ffmpeg/bin:$(PATH)

ECFLAGS      = -I$(LIB_ROOT)/build/ffmpeg/include
ELIBS        = -L$(LIB_ROOT)/build/ffmpeg/lib -ldl

EXTRAENV     =
CONFIGURE    = TVHEADEND_LIBAV_BUILD=$(LIB_ROOT)/build/ffmpeg \
  PKG_CONFIG=$(ROOTDIR)/support/pkg-config.ffmpeg ./configure

#
# YASM
#

$(LIB_ROOT)/$(YASM)/.tvh_download:
	$(call DOWNLOAD,$(YASM_URL),$(LIB_ROOT)/$(YASM_TB),$(YASM_SHA1))
	$(call UNTAR,$(YASM_TB),z)
	@touch $@

$(LIB_ROOT)/$(YASM)/.tvh_build: \
		$(LIB_ROOT)/$(YASM)/.tvh_download
	cd $(LIB_ROOT)/$(YASM) && $(CONFIGURE) \
                --prefix=/ffmpeg
	DESTDIR=$(LIB_ROOT)/build \
		$(MAKE) -C $(LIB_ROOT)/$(YASM) install
	@touch $@

#
# VDPAU library
#

ifeq (yes,$(CONFIG_VDPAU))

EXTRAARG += --enable-vdpau

DECODERS += h264_vdpau

endif

#
# NVENC
#

ifeq (yes,$(CONFIG_NVENC))

EXTRAARG += --enable-nvenc --enable-nonfree

ENCODERS += nvenc_h264 nvenc_hevc

endif

#
# MFX Dispatcher (libmfx)
#

ifeq (yes,$(CONFIG_LIBMFX))

EXTLIBS  += libmfx

DECODERS += mpeg2_qsv h264_qsv hevc_qsv
ENCODERS += mpeg2_qsv h264_qsv hevc_qsv

ELIBS += -lva
ifeq ($(CONFIG_VA_DRM),yes)
ELIBS += -lva-drm
endif
ifeq ($(CONFIG_VA_X11),yes)
ELIBS += -lva-x11
endif

endif

ifeq (yes,$(CONFIG_LIBMFX_STATIC))

$(LIB_ROOT)/$(LIBMFX)/.tvh_download:
	$(call DOWNLOAD,$(LIBMFX_URL),$(LIB_ROOT)/$(LIBMFX_TB),$(LIBMFX_SHA1))
	$(call UNTAR,$(LIBMFX_TB),z)
	@touch $@

$(LIB_ROOT)/$(LIBMFX)/.tvh_build: \
		$(LIB_ROOT)/$(LIBMFX)/.tvh_download
	cd $(LIB_ROOT)/$(LIBMFX) && autoreconf -i
	cd $(LIB_ROOT)/$(LIBMFX) && ./configure \
		--prefix=/ffmpeg \
		--enable-static \
		--disable-shared
	DESTDIR=$(LIB_ROOT)/build \
		$(MAKE) -C $(LIB_ROOT)/$(LIBMFX) install
	@touch $@

else

LIBMFX_CFLAGS = $(shell $(PKG_CONFIG) --cflags libmfx)
LIBMFX_LIBS   = $(shell $(PKG_CONFIG) --libs libmfx)

EXTRAENV += TVHEADEND_LIBMFX_CFLAGS="$(LIBMFX_CFLAGS)" TVHEADEND_LIBMFX_LIBS="$(LIBMFX_LIBS)"

$(LIB_ROOT)/$(LIBMFX)/.tvh_download:
	@mkdir -p $(LIB_ROOT)/$(LIBMFX)
	@touch $@

$(LIB_ROOT)/$(LIBMFX)/.tvh_build: \
		$(LIB_ROOT)/$(LIBMFX)/.tvh_download
	@touch $@

endif

#
# libogg & libvorbis
#

$(LIB_ROOT)/$(LIBOGG)/.tvh_download:
	$(call DOWNLOAD,$(LIBOGG_URL),$(LIB_ROOT)/$(LIBOGG_TB),$(LIBOGG_SHA1))
	$(call UNTAR,$(LIBOGG_TB),z)
	@touch $@

$(LIB_ROOT)/$(LIBOGG)/.tvh_build: \
		$(LIB_ROOT)/$(YASM)/.tvh_build \
		$(LIB_ROOT)/$(LIBOGG)/.tvh_download
	cd $(LIB_ROOT)/$(LIBOGG) && $(CONFIGURE) \
		--prefix=/ffmpeg \
		--enable-static \
		--disable-shared
	DESTDIR=$(LIB_ROOT)/build \
		$(MAKE) -C $(LIB_ROOT)/$(LIBOGG) install
	@touch $@

$(LIB_ROOT)/$(LIBVORBIS)/.tvh_download: \
		$(LIB_ROOT)/$(LIBOGG)/.tvh_download
	$(call DOWNLOAD,$(LIBVORBIS_URL),$(LIB_ROOT)/$(LIBVORBIS_TB),$(LIBVORBIS_SHA1))
	$(call UNTAR,$(LIBVORBIS_TB),z)
	@touch $@

$(LIB_ROOT)/$(LIBVORBIS)/.tvh_build: \
		$(LIB_ROOT)/$(LIBVORBIS)/.tvh_download \
		$(LIB_ROOT)/$(YASM)/.tvh_build \
		$(LIB_ROOT)/$(LIBOGG)/.tvh_build
	cd $(LIB_ROOT)/$(LIBVORBIS) && $(CONFIGURE) \
		--prefix=/ffmpeg \
		--enable-static \
		--disable-shared \
		--with-ogg=$(LIB_ROOT)/build/ffmpeg
	DESTDIR=$(LIB_ROOT)/build \
		$(MAKE) -C $(LIB_ROOT)/$(LIBVORBIS) install
	@touch $@

#
# libx264
#

ifneq (yes,$(CONFIG_LIBX264_STATIC))

$(LIB_ROOT)/$(LIBX264)/.tvh_download:
	@echo "***** LIBX264 STATIC BUILD IS DISABLED, USING INSTALLED PACKAGE *****"
	@mkdir -p $(LIB_ROOT)/$(LIBX264)
	@touch $@

$(LIB_ROOT)/$(LIBX264)/.tvh_build: $(LIB_ROOT)/$(LIBX264)/.tvh_download
	@touch $@

else

ifneq (,$(DEB_BUILD_GNU_TYPE))
LIBX264_HOST := --host=$(DEB_BUILD_GNU_TYPE)
endif

$(LIB_ROOT)/$(LIBX264)/.tvh_download:
	$(call DOWNLOAD,$(LIBX264_URL),$(LIB_ROOT)/$(LIBX264_TB),$(LIBX264_SHA1))
	#rm -rf $(LIB_ROOT)/x264-snapshot-*
	$(call UNTAR,$(LIBX264_TB),j)
	#{ ln -sf $$(basename $(LIB_ROOT)/x264-snapshot-*) $(LIB_ROOT)/$(LIBX264); }
	@touch $@

$(LIB_ROOT)/$(LIBX264)/.tvh_build: \
		$(LIB_ROOT)/$(LIBX264)/.tvh_download \
		$(LIB_ROOT)/$(YASM)/.tvh_build
	cd $(LIB_ROOT)/$(LIBX264) && $(CONFIGURE) \
		--prefix=/ffmpeg \
		--enable-static \
		--disable-shared \
		--disable-avs \
		--disable-swscale \
		--disable-lavf \
		--disable-ffms \
		--disable-gpac \
		--disable-lsmash \
		$(LIBX264_HOST)
	DESTDIR=$(LIB_ROOT)/build \
		$(MAKE) -C $(LIB_ROOT)/$(LIBX264) install
	@touch $@

endif

#
# libx265
#

ifeq (yes,$(CONFIG_LIBX265))

EXTLIBS  += libx265
ENCODERS += libx265

endif


ifeq (yes,$(CONFIG_LIBX265_STATIC))

$(LIB_ROOT)/$(LIBX265)/.tvh_download:
	$(call DOWNLOAD,$(LIBX265_URL),$(LIB_ROOT)/$(LIBX265_TB),$(LIBX265_SHA1))
	$(call UNTAR,$(LIBX265_TB),z)
	@touch $@

$(LIB_ROOT)/$(LIBX265)/.tvh_build: \
		$(LIB_ROOT)/$(LIBX265)/.tvh_download \
		$(LIB_ROOT)/$(YASM)/.tvh_build
	cd $(LIB_ROOT)/$(LIBX265)/build/linux && cmake \
		-G "Unix Makefiles" \
		-DCMAKE_INSTALL_PREFIX="/ffmpeg" \
		-DENABLE_SHARED:bool=off \
		../../source
	DESTDIR=$(LIB_ROOT)/build \
		$(MAKE) -C $(LIB_ROOT)/$(LIBX265)/build/linux install
	@touch $@

else

$(LIB_ROOT)/$(LIBX265)/.tvh_download:
	@mkdir -p $(LIB_ROOT)/$(LIBX265)
	@touch $@

$(LIB_ROOT)/$(LIBX265)/.tvh_build: $(LIB_ROOT)/$(LIBX265)/.tvh_download
	@touch $@

endif

#
# libvpx (VP8)
#

$(LIB_ROOT)/$(LIBVPX)/.tvh_download:
	@mkdir -p $(LIB_ROOT)
	$(call DOWNLOAD,$(LIBVPX_URL),$(LIB_ROOT)/$(LIBVPX_TB),$(LIBVPX_SHA1))
	$(call UNTAR,$(LIBVPX_TB),j)
	@touch $@

$(LIB_ROOT)/$(LIBVPX)/.tvh_build: \
		$(LIB_ROOT)/$(LIBVPX)/.tvh_download \
		$(LIB_ROOT)/$(YASM)/.tvh_build
	cd $(LIB_ROOT)/$(LIBVPX) && $(CONFIGURE) \
		--prefix=/ffmpeg \
		--enable-static \
		--disable-shared
	DIST_DIR=$(LIB_ROOT)/build/ffmpeg \
		$(MAKE) -C $(LIB_ROOT)/$(LIBVPX) install
	@touch $@

#
# FFMPEG
#

$(LIB_ROOT)/$(FFMPEG)/.tvh_download:
	@mkdir -p $(LIB_ROOT)/build
	$(call DOWNLOAD,$(FFMPEG_URL),$(LIB_ROOT)/$(FFMPEG_TB),$(FFMPEG_SHA1))
	$(call UNTAR,$(FFMPEG_TB),j)
	$(call PATCH,$(FFMPEG),$(FFMPEG_DIFFS))
	@touch $@

$(LIB_ROOT)/$(FFMPEG)/.tvh_build: \
		$(LIB_ROOT)/$(YASM)/.tvh_build \
		$(LIB_ROOT)/$(LIBVORBIS)/.tvh_build \
		$(LIB_ROOT)/$(LIBX264)/.tvh_build \
		$(LIB_ROOT)/$(LIBX265)/.tvh_build \
		$(LIB_ROOT)/$(LIBVPX)/.tvh_build \
		$(LIB_ROOT)/$(LIBMFX)/.tvh_build \
		$(LIB_ROOT)/$(FFMPEG)/.tvh_download
	cd $(LIB_ROOT)/$(FFMPEG) && $(EXTRAENV) $(CONFIGURE) \
                --prefix=/ffmpeg \
		--disable-all \
		--enable-static \
		--disable-shared \
		--enable-gpl \
		--extra-cflags="$(ECFLAGS)" \
		--extra-libs="$(ELIBS)" \
                --pkg-config="$(ROOTDIR)/support/pkg-config.ffmpeg" \
		$(foreach extlib,$(EXTLIBS),--enable-$(extlib)) \
		$(foreach component,$(COMPONENTS),--enable-$(component)) \
		$(foreach protocol,$(PROTOCOLS),--enable-protocol=$(protocol)) \
		$(foreach decoder,$(DECODERS),--enable-decoder=$(decoder)) \
		$(foreach encoder,$(ENCODERS),--enable-encoder=$(encoder)) \
		$(foreach muxer,$(MUXERS),--enable-muxer=$(muxer)) \
		$(foreach bsf,$(BSFS),--enable-bsf=$(bsf)) \
		$(foreach filter,$(FILTERS),--enable-filter=$(filter))
	DESTDIR=$(LIB_ROOT)/build \
		$(MAKE) -C $(LIB_ROOT)/$(FFMPEG) install
	@touch $@
